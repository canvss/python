运算符（a=21，b=10）
    /:a/b=2.1
    %：取模 - 返回除法的余数 a%b=1
    //:取整除 - 返回商的整数部分（向下取整)a//b=2,9//2=4,-9//2=-5
    **:幂 - 返回x的y次幂	2**3 = 8
    =:比较int值是否相等
    ==:幂 - 返回x的y次幂
    =	简单的赋值运算符	c = a + b 将 a + b 的运算结果赋值为 c
    +=	加法赋值运算符	c += a 等效于 c = c + a
    -=	减法赋值运算符	c -= a 等效于 c = c - a
    *=	乘法赋值运算符	c *= a 等效于 c = c * a
    /=	除法赋值运算符	c /= a 等效于 c = c / a
    %=	取模赋值运算符	c %= a 等效于 c = c % a
    **=	幂赋值运算符	c **= a 等效于 c = c ** a
    //=	取整除赋值运算符	c //= a 等效于 c = c // a
    &	按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0	(a & b) 输出结果 12 ，二进制解释： 0000 1100
    |	按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。	(a | b) 输出结果 61 ，二进制解释： 0011 1101
    ^	按位异或运算符：当两对应的二进位相异时，结果为1	(a ^ b) 输出结果 49 ，二进制解释： 0011 0001
    ~	按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1 。~x 类似于 -x-1	(~a ) 输出结果 -61 ，二进制解释： 1100 0011，在一个有符号二进制数的补码形式。
    <<	左移动运算符：运算数的各二进位全部左移若干位，由 << 右边的数字指定了移动的位数，高位丢弃，低位补0。	a << 2 输出结果 240 ，二进制解释： 1111 0000
    >>	右移动运算符：把">>"左边的运算数的各二进位全部右移若干位，>> 右边的数字指定了移动的位数	a >> 2 输出结果 15 ，二进制解释： 0000 1111

面向对象
    三大特征
        封装、继承、多态

    __slots__绑定某些属性，只对当前类，不对子类影响

    静态方法和类方法
        @staticmethod
        @classmethod

    继承
        一个类从另一个类那里将属性和方法直接继承下来，从而减少重复代码的编写。提供继承信息的我们称之为父类，
        子类除了继承父类提供的属性和方法，还可以定义自己特有的属性和方法，所以子类比父类拥有的更多的能力

    多态
        子类在继承了父类的方法后，可以对父类已有的方法给出新的实现版本，这个动作称之为方法重写（override）。
        通过方法重写我们可以让父类的同一个行为在子类中拥有不同的实现版本，当我们调用这个经过子类重写的方法时，
        不同的子类对象会表现出不同的行为，这个就是多态（poly-morphism）。

    抽象类
        @abstractmethod
        抽象类就是不能够创建对象的类，这种类的存在就是专门为了让其他类去继承它，如果一个类中定义了抽象方法那么
        这个类就不能被势例化（不能创建对象）

random.shuffle
__str__()
__repr__()


文件
    finally代码总执行块
    with指定文件对象上下文环境并在离开上下文环境时自动释放文件资源
    readlines
    try
    except
    读取二进制
        rt
        wt
    json
        dump 按照json格式序列化到文件中
        dumps 处理成json格式的字符串
        load 将文件中json数据反序列化
        loads   将字符串内容反序列化成python对象
        序列化
            序列化（serialization）在计算机科学的数据处理中，是指将数据结构或
            对象状态转换为可以存储或传输的形式，这样在需要的时候能够恢复到原先的状态
            ，而且通过序列化的数据重新获取字节时，可以利用这些字节来产生原始对象的副本
            （拷贝）。与这个过程相反的动作，即从一系列字节中提取数据结构的操作，就是反
            序列化（deserialization）”。